################################
# Setting your working directory
################################
getwd() #to get default wd
ls() #list functions in the script or file
dir() #list of file in wd
#To change directory: File > Change dir... > Browse for folder
source() #to load codes in the file

###########################
# Overview and history of R
###########################
#A dialect of S. The book: Programming with Data by John Chambers. Document version 4 of S. A reference book for this workshop. www.stat.bell-labs.com/S/history.html
#Core group: control the source code for R.
#Syntax and semantics similar to S. Community in R-help (r-help@r-project.org) and R-devel (developers) as well as StackOverflow.
#Free software foundation www.fsf.org
#Drawbacks: objects must generally be stored in physical memory (odbc?).
#Design: Base system - CRAN (developed by users and programmers) | Recommended Packages | ej. bioconductor.org
#references http://www.r-project.org/doc/bib/R-books.html

##############
# Getting help
##############
#Search the archives of the forum
#Google the error message (cut and paste it)
#Read the manual
#FAQ
#Read the source code
#Post in the discussion board
##The problem should be reproducible (dataset and code)
##What is your expectation?
##Version of the product
##Operating system
##examples of subject header: "R 3.0.2 lm() funtion on Mac OS  --seg fault on large data frame"
##Describe the goal, not the steps

################################
# R Console Input and Evaluation
################################
#entering input expressions either numerical or characters strings (msg <- "hello")
# ":" operator to create integer sequence (x <-1:20)


#######################################
# Data Types - R Objects and Attributes
#######################################
#Atomic objects:
##character
##numerical
##integer
##complex
##logical
#Basic objects:
##vector; only contains objects of the same class. Except for the list. To create them use the empty funtion: "vector(*[class],*[lenght])"
#L suffix to specify explicitly that you want an integer ex: "1L"
#"Inf" for infinity
#"NaN not a number"
#"attributes()" to set or modify the attributes of the file
##"dim()"
##"class()"
##"lenght()"

##############################
# Data Types: Vector and Lists
##############################

#"c()" to create vector of objects
# vector function "x <- vector ("numeric", length = 10)
#for diff object R will create the leat common denominator (lcd); number, character, logical (implicit coercion)
#Explicit coercion: to turn to other formats "as"
#     x <- 0:6
#     class(x)
#     as.numeric(x)
#     as.logical(x)
#     as.character(x)
#List: like a vector but with objects of diff kinds ex. "x <- list(1, "a", TRUE, 1 +4i)" results in 4 vectors

######################
# Data Types: Matrices
######################

#Vectors with dimensions attribute. Constructed columnwise.
#     m <- matrix(nrow = 2, ncol = 3)
#dimensions
#     dim(m)
#     attributes(m)
#     m <- matrix(1:6, nrow = 2, ncol = 3)
#created from a vector
#     m <- 1:10
#2 rows, 5 cols
#     dim(m) <- c(2,5) 
#binding cols and rows
#     x <- 1:3
#     y <- 10:12
#     cbind(x,y)
#     rbind(x,y)

#####################
# Data Types: Factors
#####################

#vectors for categorical data either ordered (adj prof, aux prof, full prof) or unordered (male and female)
#     x <- factor(c("yes", "yes", "no", "yes", "no"))
#                 levels = c("yes", "no"))
#     table(x)
#     unclass(x)

############################
# Data Types: Missing Values
############################

